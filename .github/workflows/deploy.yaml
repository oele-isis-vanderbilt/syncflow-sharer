name: Deploy to Jetstream / Docker Cleanup

on:
  push:
    branches:
      - main

  release: # Trigger the workflow on release events
    types: [published]

  schedule:
    - cron: '0 0 * * *' # Run every day at 00:00 UTC

jobs:
  DeployToEC2:
    name: Deploy API to JetStream2
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v4
      - name: Build and Deploy game API
        if: github.event_name == 'push'
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh-keygen -y -f private_key > /dev/null
          ssh -o StrictHostKeyChecking=no -i private_key ${USERNAME}@${HOST} '
            echo "Pulling latest changes from GitHub"
            rm -rf MimeSharerDeployment
            mkdir MimeSharerDeployment && cd MimeSharerDeployment
            git clone git@github.com:oele-isis-vanderbilt/syncflow-sharer.git
            cd syncflow-sharer
            cp ~/.env.mimesharer .env
            sudo chmod 666 /var/run/docker.sock
            docker compose -p mime-sharer-deployment build web
            docker compose -p mime-sharer-deployment down web
            docker compose -p mime-sharer-deployment up -d web
          '

      - name: Docker Cleanup on JetStream2 VM
        if: github.event_name == 'schedule'
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh-keygen -y -f private_key > /dev/null
          ssh -o StrictHostKeyChecking=no -i private_key ${USERNAME}@${HOST} '
            sudo chmod 666 /var/run/docker.sock
            docker system prune -f
          '
